<%
publications = {
	data: [],
	authors: [],
	publishers: [],
	years: [],
}

current_counter = 0

raw_publications = load_yaml('data/publications.yml')['publications']
raw_publications.each do | raw_publication |
	current_counter += 1

	publication = {
		index: current_counter,
		authors: raw_publication['authors'].split(/,\s*/).map { |x| x.gsub(/\.$/, '') },
		title: raw_publication['title'],
		journal: raw_publication['journal'],
		year: raw_publication['published_on'],
		publisher: raw_publication['journal'],
	}

	if publication[:publisher].match?(/,/)
		publication[:publisher] = publication[:publisher].split(/\s*,\s*/)[0]
	end

	publication[:publisher] = publication[:publisher].gsub(/\s+\d+$/, '')

	publications[:publishers].push publication[:publisher]

	if !publication[:year].nil?
		publications[:years].push publication[:year]
	end

	publications[:data].push publication

	publications[:authors] += publication[:authors]
end

publications[:authors] = publications[:authors].uniq.sort
publications[:publishers] = publications[:publishers].uniq.sort
publications[:years] = publications[:years].uniq.sort.reverse
%>

<h1 class="title">Publications</h1>

<div class="filters">
	<div class="counter"></div>
</div>

<ul class="publications">
	<% publications[:data].each do | publication | %>
		<li data-id="<%= publication[:index] %>">
			<div class="title"><%= publication[:title] %></div>
			<div class="authors"><%= publication[:authors].join ', ' %></div>
			<div class="journal">
				<% if !publication[:year].nil? %>
					<span class="year label"><%= publication[:year] %></span>
				<% end %>
				<%= publication[:journal] %>
			</div>
		</li>
	<% end %>
</ul>

<script>
var collection = <%= publications.to_json.html_safe %>;

function select(id) {
	return document.querySelector('li[data-id="' + id + '"]');
}

function css(id, style) {
	let e = select(id);

	for (let k in style) {
		e.style[k] = style[k];
	}
}

function runFilter(targetYear, targetPublisher) {
	let counter = 0;

	for (let d of collection.data) {
		let visible = true;

		if (targetYear !== null && d.year !== targetYear) {
			visible = false;
		}

		if (targetPublisher !== null && d.publisher !== targetPublisher) {
			visible = false;
		}

		css(d.index, {
			display: visible ? 'block' : 'none',
		});

		counter += visible ? 1 : 0;
	}

	$('div.filters .counter').attr('data-count', counter).html(counter);
}

function initialize() {
	let targetYear = null;
	let targetPublisher = null;

	collection.data = collection.data.sort((x) => { x.year }).reverse();
	collection.publishers = collection.publishers.sort((x) => { x.toLowerCase() });

	for (let d of collection.data) {
		css(d.index, {
			order: d.year ? collection.years.indexOf(d.year) : 9999
		});
	}

	// Dynamically generate the filter components to avoid input cache on reload.
	let $filters = $('div.filters');

	$filters.append([
		'<span>from</span>',
		'<select class="publisher"><option value="">All Publishers</option></select>',
		'<span>in</span>',
		'<select class="year"><option value="">(All Years)</option></select>',
	]);

	let $yearFilter = $filters.find('.year');
	let $publisherFilter = $filters.find('.publisher');

	for (let year of collection.years) {
		$yearFilter.append('<option value="' + year + '">' + year + '</option>');
	}

	for (let publisher of collection.publishers) {
		$publisherFilter.append('<option value="' + publisher + '">' + publisher + '</option>');
	}

	$yearFilter.on('change', (e) => {
		targetYear = e.currentTarget.value;

		if (targetYear.length === 0) {
			targetYear = null;
		} else {
			targetYear = parseInt(targetYear, 10);
		}

		runFilter(targetYear, targetPublisher);
	});

	$publisherFilter.on('change', (e) => {
		targetPublisher = e.currentTarget.value;

		if (targetPublisher.length === 0) {
			targetPublisher = null;
		}

		runFilter(targetYear, targetPublisher);
	});

	// First run
	runFilter(targetYear, targetPublisher);
}

window.addEventListener('load', () => {
	initialize();
});
</script>
